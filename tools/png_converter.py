#!/usr/bin/env python3
"""
PNG Converter for OLED Displays
Converts PNG file to a C header file format compatible with OLED display libraries.

Copyright (C) 2025 Luc LEBOSSE

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
"""

import sys
import os
from PIL import Image
import datetime

def png_to_xbm(png_file, xbm_file, var_name=None):
    # Get current year for copyright
    current_year = datetime.datetime.now().year
    
    # Open the PNG file
    img = Image.open(png_file)
    
    # Convert to 1-bit (black and white)
    img = img.convert('1')
    
    # Get dimensions
    width, height = img.size
    
    # If no variable name provided, use the filename without extension
    if var_name is None:
        var_name = os.path.basename(png_file).split('.')[0].replace('-', '_')
    
    # Create header guard based on the output filename
    header_name = os.path.basename(xbm_file).upper().replace('.', '_').replace('-', '_')
    
    # Generate the header with license
    xbm_data = f"""/*

  {os.path.basename(xbm_file)} fonts for screen.
  XBM file generated by png_converter.py

  Part of grblHAL

  Copyright (c) 2025 Luc LEBOSSE

  grblHAL is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  grblHAL is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more programmed.

  You should have received a copy of the GNU General Public License
  along with grblHAL. If not, see <http://www.gnu.org/licenses/>.

*/

#ifndef _{header_name}_
#define _{header_name}_
#define LOGO_WIDTH {width}
#define LOGO_HEIGH {height}
static const char logo_bits[] = {{
"""
    
    # Convert pixels to XBM format
    bytes_per_row = (width + 7) // 8
    total_bytes = bytes_per_row * height
    bytes = []
    
    for y in range(height):
        for x_byte in range(bytes_per_row):
            byte = 0
            for bit in range(8):
                x = x_byte * 8 + bit
                if x < width:
                    # XBM format is 1 for black, 0 for white, and pixels are stored LSB first
                    if not img.getpixel((x, y)):  # Black pixel (0 in PIL is black)
                        byte |= (1 << bit)
            bytes.append(byte)
    
    # Format bytes with consistent line breaks every 12 elements
    for i in range(0, len(bytes), 12):
        chunk = bytes[i:i+12]
        line = "  " + ", ".join(f"0x{byte:02x}" for byte in chunk)
        
        # Add comma at the end if not the last line
        if i + 12 < len(bytes):
            line += ","
            
        xbm_data += line + "\n"
    
    # Close the XBM data and add footer
    xbm_data += "};\n"
    xbm_data += f"#endif // _{header_name}_\n"
    
    # Write to file
    with open(xbm_file, 'w') as f:
        f.write(xbm_data)
    
    print(f"Converted {png_file} to {xbm_file}")
    print(f"Image size: {width}x{height} pixels")
    print(f"XBM variable name: logo_bits")
    print(f"Total bytes: {len(bytes)}")

if __name__ == "__main__":
    if len(sys.argv) < 3:
        print("Usage: python png_converter.py input.png output.xbm [variable_name]")
        sys.exit(1)
    
    png_file = sys.argv[1]
    xbm_file = sys.argv[2]
    var_name = sys.argv[3] if len(sys.argv) > 3 else None
    
    png_to_xbm(png_file, xbm_file, var_name)
