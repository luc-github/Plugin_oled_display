/*
 * Font Name: arialmt_9
 * Font Size: 9
 * Font Width: 9 (maximum width of any character)
 * Font Height: 11
 * First Character: 32 ( )
 * Character Count: 96
 * Data Size: 1294 bytes
 * Source Font: arialmt.ttf
 * Bytes per Column: 2
 *
 * Font Data Format:
 * - First 4 bytes: max width, height, first char, char count
 * - Jump Table: 4 bytes per character
 *   - byte 0-1: MSB & LSB of offset in data array
 *   - byte 2: Size in bytes of this character's bitmap
 *   - byte 3: Width of this character in pixels
 * - Font Data: Bitmap data for all characters
 *
 * To render character 'X':
 * 1. Find index: 'X' - 32 = index
 * 2. Jump table entry position: 4 + (index * 4)
 * 3. Extract from data array:
 *    - offset = (jump_table[0] << 8) | jump_table[1]
 *    - size = jump_table[2]
 *    - width = jump_table[3]
 * 4. Bytes per column: 2
 * 5. Render bitmap columns from the data section
 *
 * This file was automatically generated by font_converter on 2025-03-03
 * Created by Luc LEBOSSE
 *
 * This font data is licensed under the GNU LGPL v3 License.
 */

#ifndef ARIALMT_9_H
#define ARIALMT_9_H

const char arialmt_9[] PROGMEM = {
	0x09, // Width: 9 (maximum)
	0x0B, // Height: 11
	0x20, // First Char: 32
	0x60, // Numbers of Chars: 96

	// Jump Table: Format is [MSB, LSB, size, width]
	0x00, 0x00, 0x00, 0x03,  // 32:0 ' ' width:3px
	0x00, 0x00, 0x04, 0x03,  // 33:0 '!' width:3px
	0x00, 0x04, 0x06, 0x03,  // 34:4 '"' width:3px
	0x00, 0x0A, 0x0A, 0x05,  // 35:10 '#' width:5px
	0x00, 0x14, 0x0A, 0x05,  // 36:20 '$' width:5px
	0x00, 0x1E, 0x10, 0x08,  // 37:30 '%' width:8px
	0x00, 0x2E, 0x0C, 0x06,  // 38:46 '&' width:6px
	0x00, 0x3A, 0x04, 0x02,  // 39:58 ''' width:2px
	0x00, 0x3E, 0x06, 0x03,  // 40:62 '(' width:3px
	0x00, 0x44, 0x06, 0x03,  // 41:68 ')' width:3px
	0x00, 0x4A, 0x08, 0x04,  // 42:74 '*' width:4px
	0x00, 0x52, 0x0A, 0x05,  // 43:82 '+' width:5px
	0x00, 0x5C, 0x04, 0x03,  // 44:92 ',' width:3px
	0x00, 0x60, 0x06, 0x03,  // 45:96 '-' width:3px
	0x00, 0x66, 0x04, 0x03,  // 46:102 '.' width:3px
	0x00, 0x6A, 0x06, 0x03,  // 47:106 '/' width:3px
	0x00, 0x70, 0x0A, 0x05,  // 48:112 '0' width:5px
	0x00, 0x7A, 0x06, 0x05,  // 49:122 '1' width:5px
	0x00, 0x80, 0x0A, 0x05,  // 50:128 '2' width:5px
	0x00, 0x8A, 0x0A, 0x05,  // 51:138 '3' width:5px
	0x00, 0x94, 0x0A, 0x05,  // 52:148 '4' width:5px
	0x00, 0x9E, 0x0A, 0x05,  // 53:158 '5' width:5px
	0x00, 0xA8, 0x0A, 0x05,  // 54:168 '6' width:5px
	0x00, 0xB2, 0x0A, 0x05,  // 55:178 '7' width:5px
	0x00, 0xBC, 0x0A, 0x05,  // 56:188 '8' width:5px
	0x00, 0xC6, 0x0A, 0x05,  // 57:198 '9' width:5px
	0x00, 0xD0, 0x04, 0x03,  // 58:208 ':' width:3px
	0x00, 0xD4, 0x04, 0x03,  // 59:212 ';' width:3px
	0x00, 0xD8, 0x0A, 0x05,  // 60:216 '<' width:5px
	0x00, 0xE2, 0x0A, 0x05,  // 61:226 '=' width:5px
	0x00, 0xEC, 0x0A, 0x05,  // 62:236 '>' width:5px
	0x00, 0xF6, 0x0A, 0x05,  // 63:246 '?' width:5px
	0x01, 0x00, 0x12, 0x09,  // 64:256 '@' width:9px
	0x01, 0x12, 0x10, 0x06,  // 65:274 'A' width:6px
	0x01, 0x22, 0x0C, 0x06,  // 66:290 'B' width:6px
	0x01, 0x2E, 0x0E, 0x07,  // 67:302 'C' width:7px
	0x01, 0x3C, 0x0E, 0x07,  // 68:316 'D' width:7px
	0x01, 0x4A, 0x0C, 0x06,  // 69:330 'E' width:6px
	0x01, 0x56, 0x0C, 0x06,  // 70:342 'F' width:6px
	0x01, 0x62, 0x0E, 0x07,  // 71:354 'G' width:7px
	0x01, 0x70, 0x0C, 0x07,  // 72:368 'H' width:7px
	0x01, 0x7C, 0x04, 0x03,  // 73:380 'I' width:3px
	0x01, 0x80, 0x08, 0x05,  // 74:384 'J' width:5px
	0x01, 0x88, 0x0C, 0x06,  // 75:392 'K' width:6px
	0x01, 0x94, 0x0A, 0x05,  // 76:404 'L' width:5px
	0x01, 0x9E, 0x0E, 0x08,  // 77:414 'M' width:8px
	0x01, 0xAC, 0x0C, 0x07,  // 78:428 'N' width:7px
	0x01, 0xB8, 0x0E, 0x07,  // 79:440 'O' width:7px
	0x01, 0xC6, 0x0C, 0x06,  // 80:454 'P' width:6px
	0x01, 0xD2, 0x0E, 0x07,  // 81:466 'Q' width:7px
	0x01, 0xE0, 0x0E, 0x07,  // 82:480 'R' width:7px
	0x01, 0xEE, 0x0C, 0x06,  // 83:494 'S' width:6px
	0x01, 0xFA, 0x0C, 0x06,  // 84:506 'T' width:6px
	0x02, 0x06, 0x0C, 0x07,  // 85:518 'U' width:7px
	0x02, 0x12, 0x0C, 0x06,  // 86:530 'V' width:6px
	0x02, 0x1E, 0x12, 0x09,  // 87:542 'W' width:9px
	0x02, 0x30, 0x0C, 0x06,  // 88:560 'X' width:6px
	0x02, 0x3C, 0x0C, 0x06,  // 89:572 'Y' width:6px
	0x02, 0x48, 0x0C, 0x06,  // 90:584 'Z' width:6px
	0x02, 0x54, 0x06, 0x03,  // 91:596 '[' width:3px
	0x02, 0x5A, 0x06, 0x03,  // 92:602 'backslash' width:3px
	0x02, 0x60, 0x04, 0x03,  // 93:608 ']' width:3px
	0x02, 0x64, 0x08, 0x04,  // 94:612 '^' width:4px
	0x02, 0x6C, 0x0E, 0x05,  // 95:620 '_' width:5px
	0x02, 0x7A, 0x04, 0x03,  // 96:634 '`' width:3px
	0x02, 0x7E, 0x0A, 0x05,  // 97:638 'a' width:5px
	0x02, 0x88, 0x0A, 0x05,  // 98:648 'b' width:5px
	0x02, 0x92, 0x0A, 0x05,  // 99:658 'c' width:5px
	0x02, 0x9C, 0x0A, 0x05,  // 100:668 'd' width:5px
	0x02, 0xA6, 0x0A, 0x05,  // 101:678 'e' width:5px
	0x02, 0xB0, 0x06, 0x03,  // 102:688 'f' width:3px
	0x02, 0xB6, 0x0A, 0x05,  // 103:694 'g' width:5px
	0x02, 0xC0, 0x0A, 0x05,  // 104:704 'h' width:5px
	0x02, 0xCA, 0x04, 0x02,  // 105:714 'i' width:2px
	0x02, 0xCE, 0x06, 0x02,  // 106:718 'j' width:2px
	0x02, 0xD4, 0x0A, 0x05,  // 107:724 'k' width:5px
	0x02, 0xDE, 0x04, 0x02,  // 108:734 'l' width:2px
	0x02, 0xE2, 0x0E, 0x08,  // 109:738 'm' width:8px
	0x02, 0xF0, 0x0A, 0x05,  // 110:752 'n' width:5px
	0x02, 0xFA, 0x0A, 0x05,  // 111:762 'o' width:5px
	0x03, 0x04, 0x0A, 0x05,  // 112:772 'p' width:5px
	0x03, 0x0E, 0x0A, 0x05,  // 113:782 'q' width:5px
	0x03, 0x18, 0x08, 0x03,  // 114:792 'r' width:3px
	0x03, 0x20, 0x0A, 0x05,  // 115:800 's' width:5px
	0x03, 0x2A, 0x06, 0x03,  // 116:810 't' width:3px
	0x03, 0x30, 0x0A, 0x05,  // 117:816 'u' width:5px
	0x03, 0x3A, 0x0A, 0x05,  // 118:826 'v' width:5px
	0x03, 0x44, 0x0E, 0x07,  // 119:836 'w' width:7px
	0x03, 0x52, 0x0A, 0x05,  // 120:850 'x' width:5px
	0x03, 0x5C, 0x0A, 0x05,  // 121:860 'y' width:5px
	0x03, 0x66, 0x0A, 0x05,  // 122:870 'z' width:5px
	0x03, 0x70, 0x06, 0x03,  // 123:880 '{' width:3px
	0x03, 0x76, 0x04, 0x02,  // 124:886 '|' width:2px
	0x03, 0x7A, 0x06, 0x03,  // 125:890 '}' width:3px
	0x03, 0x80, 0x0A, 0x05,  // 126:896 '~' width:5px
	0x00, 0x00, 0x00, 0x03,  // 127:0 '' width:3px

	// Font Data:
	0xBE, 0x00, 0xFE, 0x00, 0x0E, 0x00, 0x0E, 0x00, 0x0E, 0x00,
	0xE8, 0x01, 0xFE, 0x01, 0xEE, 0x01, 0xFE, 0x01, 0x6E, 0x00,
	0xDE, 0x00, 0xDE, 0x01, 0xFF, 0x01, 0xFE, 0x01, 0xF4, 0x00,
	0x1C, 0x00, 0x1E, 0x01, 0xDE, 0x01, 0xFC, 0x00, 0xFC, 0x00,
	0xFE, 0x01, 0xF2, 0x01, 0xE0, 0x00, 0xE0, 0x00, 0xFE, 0x01,
	0xBE, 0x01, 0xFE, 0x00, 0xEC, 0x00, 0xE0, 0x01, 0x0E, 0x00,
	0x0E, 0x00, 0xF8, 0x00, 0xFE, 0x03, 0x06, 0x03, 0x06, 0x03,
	0xFE, 0x03, 0xF8, 0x00, 0x1C, 0x00, 0x1E, 0x00, 0x1E, 0x00,
	0x04, 0x00, 0x30, 0x00, 0x30, 0x00, 0x7C, 0x00, 0x30, 0x00,
	0x30, 0x00, 0x80, 0x03, 0x80, 0x03, 0x60, 0x00, 0x60, 0x00,
	0x60, 0x00, 0x80, 0x00, 0x80, 0x00, 0xF0, 0x01, 0x7E, 0x00,
	0x0E, 0x00, 0xFC, 0x00, 0xFE, 0x00, 0x86, 0x01, 0xFE, 0x00,
	0xFC, 0x00, 0x0C, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0xCC, 0x00,
	0xEE, 0x00, 0xF6, 0x00, 0xBE, 0x00, 0x9C, 0x00, 0xCC, 0x00,
	0xDE, 0x01, 0x96, 0x01, 0xFE, 0x00, 0xFC, 0x00, 0x70, 0x00,
	0x78, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x60, 0x00, 0xDC, 0x00,
	0xFE, 0x01, 0x9E, 0x01, 0xFE, 0x00, 0xF6, 0x00, 0xFC, 0x00,
	0xFE, 0x00, 0x9E, 0x01, 0xFE, 0x00, 0xFC, 0x00, 0x06, 0x00,
	0xE6, 0x00, 0xFE, 0x00, 0x1E, 0x00, 0x06, 0x00, 0xFC, 0x00,
	0xFE, 0x00, 0x96, 0x01, 0xFE, 0x00, 0xFC, 0x00, 0xFC, 0x00,
	0xFE, 0x01, 0xA6, 0x01, 0xFE, 0x00, 0xFC, 0x00, 0x98, 0x00,
	0x98, 0x00, 0x98, 0x03, 0x98, 0x03, 0x30, 0x00, 0x38, 0x00,
	0x78, 0x00, 0x78, 0x00, 0x6C, 0x00, 0x78, 0x00, 0x78, 0x00,
	0x78, 0x00, 0x78, 0x00, 0x78, 0x00, 0x4C, 0x00, 0x6C, 0x00,
	0x78, 0x00, 0x38, 0x00, 0x30, 0x00, 0x0C, 0x00, 0x0E, 0x00,
	0xF6, 0x00, 0x3E, 0x00, 0x1C, 0x00, 0xF0, 0x00, 0xFC, 0x03,
	0xFE, 0x03, 0xFE, 0x03, 0xDE, 0x02, 0xFE, 0x02, 0xFE, 0x03,
	0xFC, 0x03, 0xF8, 0x01, 0x00, 0x00, 0xE0, 0x00, 0xFC, 0x00,
	0x7E, 0x00, 0x7E, 0x00, 0xF8, 0x00, 0xE0, 0x00, 0x00, 0x00,
	0xFE, 0x00, 0xFE, 0x00, 0xB6, 0x00, 0xB6, 0x00, 0xFE, 0x00,
	0xEC, 0x00, 0x7C, 0x00, 0xFE, 0x00, 0xC6, 0x01, 0x86, 0x01,
	0xC6, 0x01, 0xEE, 0x00, 0x60, 0x00, 0xFE, 0x00, 0xFE, 0x00,
	0x86, 0x00, 0x86, 0x00, 0xCE, 0x00, 0xFC, 0x00, 0x30, 0x00,
	0xFE, 0x00, 0xFE, 0x00, 0xB6, 0x00, 0xB6, 0x00, 0xB6, 0x00,
	0xB6, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x36, 0x00, 0x36, 0x00,
	0x36, 0x00, 0x06, 0x00, 0x7C, 0x00, 0xFE, 0x00, 0xC6, 0x00,
	0xB6, 0x01, 0xB6, 0x01, 0xFE, 0x00, 0xFC, 0x00, 0xFE, 0x00,
	0xFE, 0x00, 0x10, 0x00, 0x10, 0x00, 0xFE, 0x00, 0xFE, 0x00,
	0xFE, 0x00, 0xFE, 0x00, 0xC0, 0x00, 0xC0, 0x01, 0xFE, 0x01,
	0xFE, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x38, 0x00, 0x7C, 0x00,
	0xEE, 0x00, 0xC6, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x80, 0x00,
	0x80, 0x00, 0x80, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x7E, 0x00,
	0xF0, 0x00, 0xF8, 0x00, 0x3E, 0x00, 0xFE, 0x00, 0xFE, 0x00,
	0xFE, 0x00, 0x3C, 0x00, 0x78, 0x00, 0xFE, 0x00, 0xFE, 0x00,
	0x7C, 0x00, 0xFE, 0x00, 0xC6, 0x00, 0x86, 0x01, 0xC6, 0x00,
	0xFE, 0x00, 0x7C, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x36, 0x00,
	0x36, 0x00, 0x3E, 0x00, 0x1C, 0x00, 0x7C, 0x00, 0xFE, 0x00,
	0xC6, 0x00, 0xC6, 0x01, 0xC6, 0x01, 0xFE, 0x01, 0xFC, 0x01,
	0xFE, 0x00, 0xFE, 0x00, 0x36, 0x00, 0x36, 0x00, 0xFE, 0x00,
	0xFE, 0x00, 0x80, 0x00, 0xFC, 0x00, 0xFE, 0x00, 0xBE, 0x01,
	0xB6, 0x01, 0xFE, 0x00, 0xEC, 0x00, 0x06, 0x00, 0x06, 0x00,
	0xFE, 0x00, 0xFE, 0x00, 0x06, 0x00, 0x06, 0x00, 0x7E, 0x00,
	0xFE, 0x00, 0x80, 0x01, 0x80, 0x01, 0xFE, 0x01, 0xFE, 0x00,
	0x0E, 0x00, 0x7E, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x7E, 0x00,
	0x0E, 0x00, 0x1E, 0x00, 0xFE, 0x00, 0xF0, 0x00, 0x7E, 0x00,
	0x1E, 0x00, 0xFC, 0x00, 0xF8, 0x00, 0x7E, 0x00, 0x06, 0x00,
	0xC6, 0x00, 0xEE, 0x00, 0x7C, 0x00, 0x7C, 0x00, 0xEE, 0x00,
	0xC6, 0x00, 0x06, 0x00, 0x1E, 0x00, 0xF8, 0x00, 0xF8, 0x00,
	0x1E, 0x00, 0x06, 0x00, 0xC6, 0x00, 0xE6, 0x00, 0xFE, 0x00,
	0x9E, 0x00, 0x8E, 0x00, 0x86, 0x00, 0xFE, 0x03, 0xFE, 0x03,
	0x06, 0x02, 0x1E, 0x00, 0xF8, 0x01, 0xC0, 0x01, 0x06, 0x02,
	0xFE, 0x03, 0x38, 0x00, 0x3E, 0x00, 0x1E, 0x00, 0x3C, 0x00,
	0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03, 0x00, 0x03,
	0x00, 0x03, 0x00, 0x03, 0x06, 0x00, 0x06, 0x00, 0xF8, 0x00,
	0xF8, 0x01, 0xA8, 0x01, 0xF8, 0x00, 0xF8, 0x00, 0xFE, 0x00,
	0xFE, 0x00, 0x98, 0x01, 0xF8, 0x01, 0xF8, 0x00, 0xF8, 0x00,
	0xF8, 0x00, 0x88, 0x01, 0xD8, 0x01, 0xD0, 0x00, 0xF8, 0x00,
	0xF8, 0x01, 0x98, 0x01, 0xFE, 0x00, 0xFE, 0x00, 0xF8, 0x00,
	0xF8, 0x00, 0xA8, 0x01, 0xF8, 0x01, 0xF8, 0x00, 0xFC, 0x00,
	0xFE, 0x00, 0x0E, 0x00, 0xF8, 0x03, 0xF8, 0x03, 0x98, 0x02,
	0xF8, 0x03, 0xF8, 0x03, 0xFE, 0x00, 0xFE, 0x00, 0x18, 0x00,
	0xF8, 0x00, 0xF8, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x00, 0x02,
	0xFE, 0x03, 0xFE, 0x03, 0xFE, 0x00, 0xFE, 0x00, 0xF8, 0x00,
	0xF8, 0x00, 0x88, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0xF8, 0x00,
	0xF8, 0x00, 0x18, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x18, 0x00,
	0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x18, 0x00, 0xF8, 0x00,
	0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x01, 0x88, 0x01, 0xF8, 0x01,
	0xF8, 0x00, 0xF8, 0x03, 0xF8, 0x03, 0x98, 0x01, 0xF8, 0x00,
	0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x88, 0x01, 0xF8, 0x03,
	0xF8, 0x03, 0xF8, 0x00, 0xF8, 0x00, 0x18, 0x00, 0x08, 0x00,
	0xF8, 0x00, 0xF8, 0x01, 0xF8, 0x01, 0xF8, 0x00, 0xC0, 0x00,
	0xFC, 0x00, 0xFE, 0x01, 0x88, 0x01, 0xF8, 0x00, 0xF8, 0x01,
	0x80, 0x01, 0xF8, 0x00, 0xF8, 0x00, 0x38, 0x00, 0xF8, 0x00,
	0xE0, 0x00, 0x78, 0x00, 0x18, 0x00, 0x78, 0x00, 0xF0, 0x00,
	0xF8, 0x00, 0xF8, 0x00, 0xF0, 0x00, 0xF8, 0x00, 0x18, 0x00,
	0xD8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0xF8, 0x00, 0x88, 0x00,
	0x38, 0x02, 0xF8, 0x03, 0xE0, 0x03, 0x78, 0x00, 0x18, 0x00,
	0xC8, 0x00, 0xE8, 0x00, 0xF8, 0x00, 0xB8, 0x00, 0x88, 0x00,
	0x70, 0x00, 0xFE, 0x03, 0x06, 0x02, 0xFE, 0x07, 0xFE, 0x07,
	0x06, 0x02, 0xFE, 0x03, 0x70, 0x00, 0x30, 0x00, 0x30, 0x00,
	0x30, 0x00, 0x30, 0x00, 0x30, 0x00
};

#endif // ARIALMT_9_H
