/*
 * Font Name: AlphaProta_8
 * Font Size: 8
 * Font Width: 6 (maximum width of any character)
 * Font Height: 9
 * Character Set: Custom (96 characters)
 * Character Spacing: 1 pixels
 * Data Size: 1403 bytes
 * Source Font: AlphaProta.ttf
 * Bytes per Column: 2
 *
 * Font Data Format:
 * - First 5 bytes: max width, height, char count MSB, char count LSB, spacing
 * - Character Table: N bytes listing the codes of included characters
 * - Jump Table: 4 bytes per character
 *   - byte 0-1: MSB & LSB of offset in data array
 *   - byte 2: Size in bytes of this character's bitmap
 *   - byte 3: Width of character in pixels
 * - Font Data: Bitmap data for all characters
 *
 * To render character 'X':
 * 1. Get font info from header:
 *    - Get max width, height from bytes 0-1
 *    - Get character count from (byte 2 << 8) | byte 3
 *    - Get recommended spacing from byte 4
 * 2. Search for character code of 'X' in the character table
 *    (bytes 5 to 5+N-1)
 * 3. If found at position i, calculate jump table entry position:
 *    jump_entry = (5 + N) + (i * 4)
 * 4. Extract from jump table entry:
 *    - offset = (jump_table[0] << 8) | jump_table[1]
 *    - size = jump_table[2]
 *    - width = jump_table[3]
 * 5. Bytes per column: 2
 * 6. Render bitmap columns from the data section
 * 7. Advance cursor position by: character_width + font_spacing
 *
 * This file was automatically generated by font_converter on 2025-03-04
 * Created by Luc LEBOSSE
 *
 * This font data is licensed under the GNU LGPL v3 License.
 */

#ifndef ALPHAPROTA_8_H
#define ALPHAPROTA_8_H

const char AlphaProta_8[] PROGMEM = {
	0x06, // Width: 6 (maximum)
	0x09, // Height: 9
	0x00, // Number of Chars MSB
	0x60, // Number of Chars LSB: 96

	0x01, // Character Spacing: 1 pixels

	// Character Table: List of character codes in this font
	0x20, // 0: ' '
	0x21, // 1: '!'
	0x22, // 2: '"'
	0x23, // 3: '#'
	0x24, // 4: '$'
	0x25, // 5: '%'
	0x26, // 6: '&'
	0x27, // 7: 0x27
	0x28, // 8: '('
	0x29, // 9: ')'
	0x2A, // 10: '*'
	0x2B, // 11: '+'
	0x2C, // 12: ','
	0x2D, // 13: '-'
	0x2E, // 14: '.'
	0x2F, // 15: '/'
	0x30, // 16: '0'
	0x31, // 17: '1'
	0x32, // 18: '2'
	0x33, // 19: '3'
	0x34, // 20: '4'
	0x35, // 21: '5'
	0x36, // 22: '6'
	0x37, // 23: '7'
	0x38, // 24: '8'
	0x39, // 25: '9'
	0x3A, // 26: ':'
	0x3B, // 27: ';'
	0x3C, // 28: '<'
	0x3D, // 29: '='
	0x3E, // 30: '>'
	0x3F, // 31: '?'
	0x40, // 32: '@'
	0x41, // 33: 'A'
	0x42, // 34: 'B'
	0x43, // 35: 'C'
	0x44, // 36: 'D'
	0x45, // 37: 'E'
	0x46, // 38: 'F'
	0x47, // 39: 'G'
	0x48, // 40: 'H'
	0x49, // 41: 'I'
	0x4A, // 42: 'J'
	0x4B, // 43: 'K'
	0x4C, // 44: 'L'
	0x4D, // 45: 'M'
	0x4E, // 46: 'N'
	0x4F, // 47: 'O'
	0x50, // 48: 'P'
	0x51, // 49: 'Q'
	0x52, // 50: 'R'
	0x53, // 51: 'S'
	0x54, // 52: 'T'
	0x55, // 53: 'U'
	0x56, // 54: 'V'
	0x57, // 55: 'W'
	0x58, // 56: 'X'
	0x59, // 57: 'Y'
	0x5A, // 58: 'Z'
	0x5B, // 59: '['
	0x5C, // 60: '\'
	0x5D, // 61: ']'
	0x5E, // 62: '^'
	0x5F, // 63: '_'
	0x60, // 64: '`'
	0x61, // 65: 'a'
	0x62, // 66: 'b'
	0x63, // 67: 'c'
	0x64, // 68: 'd'
	0x65, // 69: 'e'
	0x66, // 70: 'f'
	0x67, // 71: 'g'
	0x68, // 72: 'h'
	0x69, // 73: 'i'
	0x6A, // 74: 'j'
	0x6B, // 75: 'k'
	0x6C, // 76: 'l'
	0x6D, // 77: 'm'
	0x6E, // 78: 'n'
	0x6F, // 79: 'o'
	0x70, // 80: 'p'
	0x71, // 81: 'q'
	0x72, // 82: 'r'
	0x73, // 83: 's'
	0x74, // 84: 't'
	0x75, // 85: 'u'
	0x76, // 86: 'v'
	0x77, // 87: 'w'
	0x78, // 88: 'x'
	0x79, // 89: 'y'
	0x7A, // 90: 'z'
	0x7B, // 91: '{'
	0x7C, // 92: '|'
	0x7D, // 93: '}'
	0x7E, // 94: '~'
	0x7F, // 95: 0x7F

	// Jump Table: Format is [MSB, LSB, size, width]
	0x00, 0x00, 0x00, 0x03,  // 32:0 ' ' width:3px
	0x00, 0x00, 0x08, 0x06,  // 33:0 '!' width:6px
	0x00, 0x08, 0x04, 0x03,  // 34:8 '"' width:3px
	0x00, 0x0C, 0x0C, 0x06,  // 35:12 '#' width:6px
	0x00, 0x18, 0x0C, 0x06,  // 36:24 '$' width:6px
	0x00, 0x24, 0x0C, 0x06,  // 37:36 '%' width:6px
	0x00, 0x30, 0x0C, 0x06,  // 38:48 '&' width:6px
	0x00, 0x3C, 0x04, 0x03,  // 39:60 ''' width:3px
	0x00, 0x40, 0x0A, 0x06,  // 40:64 '(' width:6px
	0x00, 0x4A, 0x0A, 0x06,  // 41:74 ')' width:6px
	0x00, 0x54, 0x04, 0x03,  // 42:84 '*' width:3px
	0x00, 0x58, 0x0A, 0x07,  // 43:88 '+' width:7px
	0x00, 0x62, 0x04, 0x03,  // 44:98 ',' width:3px
	0x00, 0x66, 0x0C, 0x06,  // 45:102 '-' width:6px
	0x00, 0x72, 0x04, 0x03,  // 46:114 '.' width:3px
	0x00, 0x76, 0x0C, 0x06,  // 47:118 '/' width:6px
	0x00, 0x82, 0x0A, 0x07,  // 48:130 '0' width:7px
	0x00, 0x8C, 0x02, 0x03,  // 49:140 '1' width:3px
	0x00, 0x8E, 0x0A, 0x07,  // 50:142 '2' width:7px
	0x00, 0x98, 0x0A, 0x06,  // 51:152 '3' width:6px
	0x00, 0xA2, 0x0A, 0x07,  // 52:162 '4' width:7px
	0x00, 0xAC, 0x0A, 0x07,  // 53:172 '5' width:7px
	0x00, 0xB6, 0x0A, 0x07,  // 54:182 '6' width:7px
	0x00, 0xC0, 0x08, 0x06,  // 55:192 '7' width:6px
	0x00, 0xC8, 0x0A, 0x07,  // 56:200 '8' width:7px
	0x00, 0xD2, 0x0A, 0x07,  // 57:210 '9' width:7px
	0x00, 0xDC, 0x04, 0x03,  // 58:220 ':' width:3px
	0x00, 0xE0, 0x04, 0x03,  // 59:224 ';' width:3px
	0x00, 0xE4, 0x0C, 0x06,  // 60:228 '<' width:6px
	0x00, 0xF0, 0x0C, 0x06,  // 61:240 '=' width:6px
	0x00, 0xFC, 0x0C, 0x06,  // 62:252 '>' width:6px
	0x01, 0x08, 0x08, 0x06,  // 63:264 '?' width:6px
	0x01, 0x10, 0x0C, 0x06,  // 64:272 '@' width:6px
	0x01, 0x1C, 0x0A, 0x07,  // 65:284 'A' width:7px
	0x01, 0x26, 0x0A, 0x07,  // 66:294 'B' width:7px
	0x01, 0x30, 0x0A, 0x06,  // 67:304 'C' width:6px
	0x01, 0x3A, 0x0A, 0x07,  // 68:314 'D' width:7px
	0x01, 0x44, 0x0A, 0x06,  // 69:324 'E' width:6px
	0x01, 0x4E, 0x0A, 0x06,  // 70:334 'F' width:6px
	0x01, 0x58, 0x0A, 0x07,  // 71:344 'G' width:7px
	0x01, 0x62, 0x0A, 0x07,  // 72:354 'H' width:7px
	0x01, 0x6C, 0x0A, 0x07,  // 73:364 'I' width:7px
	0x01, 0x76, 0x0A, 0x07,  // 74:374 'J' width:7px
	0x01, 0x80, 0x0A, 0x06,  // 75:384 'K' width:6px
	0x01, 0x8A, 0x0A, 0x06,  // 76:394 'L' width:6px
	0x01, 0x94, 0x0A, 0x07,  // 77:404 'M' width:7px
	0x01, 0x9E, 0x0A, 0x07,  // 78:414 'N' width:7px
	0x01, 0xA8, 0x0A, 0x07,  // 79:424 'O' width:7px
	0x01, 0xB2, 0x0A, 0x07,  // 80:434 'P' width:7px
	0x01, 0xBC, 0x0A, 0x07,  // 81:444 'Q' width:7px
	0x01, 0xC6, 0x0A, 0x07,  // 82:454 'R' width:7px
	0x01, 0xD0, 0x0A, 0x07,  // 83:464 'S' width:7px
	0x01, 0xDA, 0x0A, 0x07,  // 84:474 'T' width:7px
	0x01, 0xE4, 0x0A, 0x07,  // 85:484 'U' width:7px
	0x01, 0xEE, 0x0A, 0x07,  // 86:494 'V' width:7px
	0x01, 0xF8, 0x0A, 0x07,  // 87:504 'W' width:7px
	0x02, 0x02, 0x0C, 0x06,  // 88:514 'X' width:6px
	0x02, 0x0E, 0x0A, 0x07,  // 89:526 'Y' width:7px
	0x02, 0x18, 0x08, 0x06,  // 90:536 'Z' width:6px
	0x02, 0x20, 0x0A, 0x06,  // 91:544 '[' width:6px
	0x02, 0x2A, 0x0C, 0x06,  // 92:554 'backslash' width:6px
	0x02, 0x36, 0x0A, 0x06,  // 93:566 ']' width:6px
	0x02, 0x40, 0x0C, 0x06,  // 94:576 '^' width:6px
	0x02, 0x4C, 0x0C, 0x06,  // 95:588 '_' width:6px
	0x02, 0x58, 0x0C, 0x06,  // 96:600 '`' width:6px
	0x02, 0x64, 0x0A, 0x07,  // 97:612 'a' width:7px
	0x02, 0x6E, 0x0A, 0x07,  // 98:622 'b' width:7px
	0x02, 0x78, 0x0A, 0x06,  // 99:632 'c' width:6px
	0x02, 0x82, 0x0A, 0x07,  // 100:642 'd' width:7px
	0x02, 0x8C, 0x0A, 0x06,  // 101:652 'e' width:6px
	0x02, 0x96, 0x0A, 0x06,  // 102:662 'f' width:6px
	0x02, 0xA0, 0x0A, 0x07,  // 103:672 'g' width:7px
	0x02, 0xAA, 0x0A, 0x07,  // 104:682 'h' width:7px
	0x02, 0xB4, 0x0A, 0x07,  // 105:692 'i' width:7px
	0x02, 0xBE, 0x0A, 0x07,  // 106:702 'j' width:7px
	0x02, 0xC8, 0x0A, 0x06,  // 107:712 'k' width:6px
	0x02, 0xD2, 0x0A, 0x06,  // 108:722 'l' width:6px
	0x02, 0xDC, 0x0A, 0x07,  // 109:732 'm' width:7px
	0x02, 0xE6, 0x0A, 0x07,  // 110:742 'n' width:7px
	0x02, 0xF0, 0x0A, 0x07,  // 111:752 'o' width:7px
	0x02, 0xFA, 0x0A, 0x07,  // 112:762 'p' width:7px
	0x03, 0x04, 0x0A, 0x07,  // 113:772 'q' width:7px
	0x03, 0x0E, 0x0A, 0x07,  // 114:782 'r' width:7px
	0x03, 0x18, 0x0A, 0x07,  // 115:792 's' width:7px
	0x03, 0x22, 0x0A, 0x07,  // 116:802 't' width:7px
	0x03, 0x2C, 0x0A, 0x07,  // 117:812 'u' width:7px
	0x03, 0x36, 0x0A, 0x07,  // 118:822 'v' width:7px
	0x03, 0x40, 0x0A, 0x07,  // 119:832 'w' width:7px
	0x03, 0x4A, 0x0C, 0x06,  // 120:842 'x' width:6px
	0x03, 0x56, 0x0A, 0x07,  // 121:854 'y' width:7px
	0x03, 0x60, 0x08, 0x06,  // 122:864 'z' width:6px
	0x03, 0x68, 0x0A, 0x06,  // 123:872 '{' width:6px
	0x03, 0x72, 0x02, 0x07,  // 124:882 '|' width:7px
	0x03, 0x74, 0x0A, 0x06,  // 125:884 '}' width:6px
	0x03, 0x7E, 0x0C, 0x06,  // 126:894 '~' width:6px
	0x03, 0x8A, 0x0C, 0x06,  // 127:906 width:6px

	// Font Data:
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x01, 0x00,
	0x01, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x01, 0x00, 0x01, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x21, 0x00, 0x21, 0x00, 0x21, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x21, 0x00, 0x3F, 0x00, 0x01, 0x00, 0x01, 0x00, 0x04, 0x00,
	0x04, 0x00, 0x3F, 0x00, 0x04, 0x00, 0x04, 0x00, 0x20, 0x00,
	0x20, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
	0x04, 0x00, 0x04, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x00,
	0x30, 0x00, 0x1C, 0x00, 0x0E, 0x00, 0x03, 0x00, 0x00, 0x00,
	0x3F, 0x00, 0x21, 0x00, 0x21, 0x00, 0x21, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3D, 0x00, 0x25, 0x00, 0x25, 0x00, 0x25, 0x00,
	0x27, 0x00, 0x25, 0x00, 0x25, 0x00, 0x25, 0x00, 0x25, 0x00,
	0x3F, 0x00, 0x07, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
	0x3F, 0x00, 0x27, 0x00, 0x25, 0x00, 0x25, 0x00, 0x25, 0x00,
	0x3D, 0x00, 0x3F, 0x00, 0x25, 0x00, 0x25, 0x00, 0x25, 0x00,
	0x3D, 0x00, 0x31, 0x00, 0x1D, 0x00, 0x0F, 0x00, 0x03, 0x00,
	0x3F, 0x00, 0x25, 0x00, 0x25, 0x00, 0x25, 0x00, 0x3F, 0x00,
	0x27, 0x00, 0x25, 0x00, 0x25, 0x00, 0x25, 0x00, 0x3F, 0x00,
	0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x24, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x12, 0x00, 0x12, 0x00, 0x12, 0x00, 0x12, 0x00, 0x12, 0x00,
	0x12, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x05, 0x00, 0x05, 0x00,
	0x05, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x25, 0x00, 0x25, 0x00,
	0x2F, 0x00, 0x3B, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x21, 0x00, 0x21, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x33, 0x00, 0x1E, 0x00, 0x3F, 0x00, 0x25, 0x00, 0x25, 0x00,
	0x25, 0x00, 0x25, 0x00, 0x3F, 0x00, 0x05, 0x00, 0x05, 0x00,
	0x05, 0x00, 0x05, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x25, 0x00,
	0x25, 0x00, 0x3D, 0x00, 0x3F, 0x00, 0x04, 0x00, 0x04, 0x00,
	0x04, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00, 0x3F, 0x00,
	0x21, 0x00, 0x21, 0x00, 0x38, 0x00, 0x20, 0x00, 0x20, 0x00,
	0x20, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x04, 0x00, 0x0E, 0x00,
	0x3B, 0x00, 0x21, 0x00, 0x3F, 0x00, 0x20, 0x00, 0x20, 0x00,
	0x20, 0x00, 0x20, 0x00, 0x3F, 0x00, 0x1E, 0x00, 0x30, 0x00,
	0x1E, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x07, 0x00, 0x0C, 0x00,
	0x38, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x21, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x05, 0x00, 0x05, 0x00,
	0x05, 0x00, 0x07, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x39, 0x00,
	0x31, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x05, 0x00, 0x0D, 0x00,
	0x3D, 0x00, 0x37, 0x00, 0x27, 0x00, 0x25, 0x00, 0x25, 0x00,
	0x25, 0x00, 0x3D, 0x00, 0x01, 0x00, 0x01, 0x00, 0x3F, 0x00,
	0x01, 0x00, 0x01, 0x00, 0x3F, 0x00, 0x20, 0x00, 0x20, 0x00,
	0x20, 0x00, 0x3F, 0x00, 0x1F, 0x00, 0x30, 0x00, 0x20, 0x00,
	0x30, 0x00, 0x1F, 0x00, 0x3F, 0x00, 0x1E, 0x00, 0x03, 0x00,
	0x1E, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x33, 0x00, 0x1E, 0x00,
	0x1E, 0x00, 0x33, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00,
	0x3C, 0x00, 0x07, 0x00, 0x01, 0x00, 0x31, 0x00, 0x3D, 0x00,
	0x2F, 0x00, 0x23, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x21, 0x00, 0x21, 0x00, 0x00, 0x00, 0x03, 0x00, 0x0E, 0x00,
	0x1C, 0x00, 0x30, 0x00, 0x00, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x21, 0x00, 0x21, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x20, 0x00,
	0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x05, 0x00, 0x05, 0x00, 0x05, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x25, 0x00, 0x25, 0x00, 0x2F, 0x00,
	0x3B, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x21, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00, 0x33, 0x00,
	0x1E, 0x00, 0x3F, 0x00, 0x25, 0x00, 0x25, 0x00, 0x25, 0x00,
	0x25, 0x00, 0x3F, 0x00, 0x05, 0x00, 0x05, 0x00, 0x05, 0x00,
	0x05, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x25, 0x00, 0x25, 0x00,
	0x3D, 0x00, 0x3F, 0x00, 0x04, 0x00, 0x04, 0x00, 0x04, 0x00,
	0x3F, 0x00, 0x21, 0x00, 0x21, 0x00, 0x3F, 0x00, 0x21, 0x00,
	0x21, 0x00, 0x38, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x04, 0x00, 0x0E, 0x00, 0x3B, 0x00,
	0x21, 0x00, 0x3F, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00,
	0x20, 0x00, 0x3F, 0x00, 0x1E, 0x00, 0x30, 0x00, 0x1E, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x07, 0x00, 0x0C, 0x00, 0x38, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x05, 0x00, 0x05, 0x00, 0x05, 0x00,
	0x07, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x39, 0x00, 0x31, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x05, 0x00, 0x0D, 0x00, 0x3D, 0x00,
	0x37, 0x00, 0x27, 0x00, 0x25, 0x00, 0x25, 0x00, 0x25, 0x00,
	0x3D, 0x00, 0x01, 0x00, 0x01, 0x00, 0x3F, 0x00, 0x01, 0x00,
	0x01, 0x00, 0x3F, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00,
	0x3F, 0x00, 0x1F, 0x00, 0x30, 0x00, 0x20, 0x00, 0x30, 0x00,
	0x1F, 0x00, 0x3F, 0x00, 0x1E, 0x00, 0x03, 0x00, 0x1E, 0x00,
	0x3F, 0x00, 0x00, 0x00, 0x33, 0x00, 0x1E, 0x00, 0x1E, 0x00,
	0x33, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x3C, 0x00,
	0x07, 0x00, 0x01, 0x00, 0x31, 0x00, 0x3D, 0x00, 0x2F, 0x00,
	0x23, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x21, 0x00, 0x3F, 0x00, 0x21, 0x00, 0x21, 0x00, 0x21, 0x00,
	0x21, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00,
	0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00, 0x3F, 0x00
};

#endif // ALPHAPROTA_8_H
