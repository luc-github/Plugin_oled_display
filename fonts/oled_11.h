/*
 * Font Name: oled_11
 * Font Size: 11
 * Font Width: 9 (maximum width of any character)
 * Font Height: 11
 * Character Set: Custom (69 characters)
 * Character Spacing: 2 pixels
 * Data Size: 1054 bytes
 * Source Font: Template
 * Bytes per Column: 2
 *
 * Font Data Format:
 * - First 5 bytes: max width, height, char count MSB, char count LSB, spacing
 * - Character Table: N bytes listing the codes of included characters
 * - Jump Table: 4 bytes per character
 *   - byte 0-1: MSB & LSB of offset in data array
 *   - byte 2: Size in bytes of this character's bitmap
 *   - byte 3: Width of character in pixels
 * - Font Data: Bitmap data for all characters
 *
 * To render character 'X':
 * 1. Get font info from header:
 *    - Get max width, height from bytes 0-1
 *    - Get character count from (byte 2 << 8) | byte 3
 *    - Get recommended spacing from byte 4
 * 2. Search for character code of 'X' in the character table
 *    (bytes 5 to 5+N-1)
 * 3. If found at position i, calculate jump table entry position:
 *    jump_entry = (5 + N) + (i * 4)
 * 4. Extract from jump table entry:
 *    - offset = (jump_table[0] << 8) | jump_table[1]
 *    - size = jump_table[2]
 *    - width = jump_table[3]
 * 5. Bytes per column: 2
 * 6. Render bitmap columns from the data section
 * 7. Advance cursor position by: character_width + font_spacing
 *
 * This file was automatically generated by font_template_generator on 2025-03-06
 * Created by Luc LEBOSSE
 *
 * This font data is licensed under the GNU LGPL v3 License.
 */

#ifndef OLED_11_H
#define OLED_11_H

const char oled_11[] PROGMEM = {
	0x09, // Width: 9 (maximum)
	0x0B, // Height: 11
	0x00, // Number of Chars MSB
	0x45, // Number of Chars LSB: 69
	0x02, // Character Spacing: 2 pixels

	// Character Table: List of character codes in this font
	0x20, // 0: ' '
	0x21, // 1: '!'
	0x22, // 2: '"'
	0x23, // 3: '#'
	0x24, // 4: '$'
	0x25, // 5: '%'
	0x26, // 6: '&'
	0x27, // 7: 0x27
	0x28, // 8: '('
	0x29, // 9: ')'
	0x2A, // 10: '*'
	0x2B, // 11: '+'
	0x2C, // 12: ','
	0x2D, // 13: '-'
	0x2E, // 14: '.'
	0x2F, // 15: '/'
	0x30, // 16: '0'
	0x31, // 17: '1'
	0x32, // 18: '2'
	0x33, // 19: '3'
	0x34, // 20: '4'
	0x35, // 21: '5'
	0x36, // 22: '6'
	0x37, // 23: '7'
	0x38, // 24: '8'
	0x39, // 25: '9'
	0x3A, // 26: ':'
	0x3B, // 27: ';'
	0x3C, // 28: '<'
	0x3D, // 29: '='
	0x3E, // 30: '>'
	0x3F, // 31: '?'
	0x40, // 32: '@'
	0x41, // 33: 'A'
	0x42, // 34: 'B'
	0x43, // 35: 'C'
	0x44, // 36: 'D'
	0x45, // 37: 'E'
	0x46, // 38: 'F'
	0x47, // 39: 'G'
	0x48, // 40: 'H'
	0x49, // 41: 'I'
	0x4A, // 42: 'J'
	0x4B, // 43: 'K'
	0x4C, // 44: 'L'
	0x4D, // 45: 'M'
	0x4E, // 46: 'N'
	0x4F, // 47: 'O'
	0x50, // 48: 'P'
	0x51, // 49: 'Q'
	0x52, // 50: 'R'
	0x53, // 51: 'S'
	0x54, // 52: 'T'
	0x55, // 53: 'U'
	0x56, // 54: 'V'
	0x57, // 55: 'W'
	0x58, // 56: 'X'
	0x59, // 57: 'Y'
	0x5A, // 58: 'Z'
	0x5B, // 59: '['
	0x5C, // 60: '\'
	0x5D, // 61: ']'
	0x5E, // 62: '^'
	0x5F, // 63: '_'
	0x60, // 64: '`'
	0x7B, // 65: '{'
	0x7C, // 66: '|'
	0x7D, // 67: '}'
	0x7E, // 68: '~'

	// Jump Table: Format is [MSB, LSB, size, width]
	0x00, 0x00, 0x08, 0x04,  // 32:0 ' ' width:4px
	0x00, 0x08, 0x02, 0x01,  // 33:8 '!' width:1px
	0x00, 0x0A, 0x08, 0x04,  // 34:10 '"' width:4px
	0x00, 0x12, 0x0C, 0x06,  // 35:18 '#' width:6px
	0x00, 0x1E, 0x0A, 0x05,  // 36:30 '$' width:5px
	0x00, 0x28, 0x10, 0x08,  // 37:40 '%' width:8px
	0x00, 0x38, 0x0A, 0x05,  // 38:56 '&' width:5px
	0x00, 0x42, 0x02, 0x01,  // 39:66 ''' width:1px
	0x00, 0x44, 0x08, 0x04,  // 40:68 '(' width:4px
	0x00, 0x4C, 0x08, 0x04,  // 41:76 ')' width:4px
	0x00, 0x54, 0x0A, 0x05,  // 42:84 '*' width:5px
	0x00, 0x5E, 0x0E, 0x07,  // 43:94 '+' width:7px
	0x00, 0x6C, 0x04, 0x02,  // 44:108 ',' width:2px
	0x00, 0x70, 0x0A, 0x05,  // 45:112 '-' width:5px
	0x00, 0x7A, 0x04, 0x02,  // 46:122 '.' width:2px
	0x00, 0x7E, 0x0A, 0x05,  // 47:126 '/' width:5px
	0x00, 0x88, 0x0C, 0x06,  // 48:136 '0' width:6px
	0x00, 0x94, 0x08, 0x04,  // 49:148 '1' width:4px
	0x00, 0x9C, 0x0C, 0x06,  // 50:156 '2' width:6px
	0x00, 0xA8, 0x0C, 0x06,  // 51:168 '3' width:6px
	0x00, 0xB4, 0x0C, 0x06,  // 52:180 '4' width:6px
	0x00, 0xC0, 0x0C, 0x06,  // 53:192 '5' width:6px
	0x00, 0xCC, 0x0C, 0x06,  // 54:204 '6' width:6px
	0x00, 0xD8, 0x0C, 0x06,  // 55:216 '7' width:6px
	0x00, 0xE4, 0x0C, 0x06,  // 56:228 '8' width:6px
	0x00, 0xF0, 0x0C, 0x06,  // 57:240 '9' width:6px
	0x00, 0xFC, 0x04, 0x02,  // 58:252 ':' width:2px
	0x01, 0x00, 0x06, 0x03,  // 59:256 ';' width:3px
	0x01, 0x06, 0x0A, 0x05,  // 60:262 '<' width:5px
	0x01, 0x10, 0x0A, 0x05,  // 61:272 '=' width:5px
	0x01, 0x1A, 0x0A, 0x05,  // 62:282 '>' width:5px
	0x01, 0x24, 0x0C, 0x06,  // 63:292 '?' width:6px
	0x01, 0x30, 0x0C, 0x06,  // 64:304 '@' width:6px
	0x01, 0x3C, 0x0C, 0x06,  // 65:316 'A' width:6px
	0x01, 0x48, 0x0C, 0x06,  // 66:328 'B' width:6px
	0x01, 0x54, 0x0C, 0x06,  // 67:340 'C' width:6px
	0x01, 0x60, 0x0C, 0x06,  // 68:352 'D' width:6px
	0x01, 0x6C, 0x0C, 0x06,  // 69:364 'E' width:6px
	0x01, 0x78, 0x0C, 0x06,  // 70:376 'F' width:6px
	0x01, 0x84, 0x0C, 0x06,  // 71:388 'G' width:6px
	0x01, 0x90, 0x0C, 0x06,  // 72:400 'H' width:6px
	0x01, 0x9C, 0x06, 0x03,  // 73:412 'I' width:3px
	0x01, 0xA2, 0x0C, 0x06,  // 74:418 'J' width:6px
	0x01, 0xAE, 0x0C, 0x06,  // 75:430 'K' width:6px
	0x01, 0xBA, 0x0C, 0x06,  // 76:442 'L' width:6px
	0x01, 0xC6, 0x12, 0x09,  // 77:454 'M' width:9px
	0x01, 0xD8, 0x0C, 0x06,  // 78:472 'N' width:6px
	0x01, 0xE4, 0x0C, 0x06,  // 79:484 'O' width:6px
	0x01, 0xF0, 0x0C, 0x06,  // 80:496 'P' width:6px
	0x01, 0xFC, 0x0E, 0x07,  // 81:508 'Q' width:7px
	0x02, 0x0A, 0x0E, 0x07,  // 82:522 'R' width:7px
	0x02, 0x18, 0x0C, 0x06,  // 83:536 'S' width:6px
	0x02, 0x24, 0x0A, 0x05,  // 84:548 'T' width:5px
	0x02, 0x2E, 0x0C, 0x06,  // 85:558 'U' width:6px
	0x02, 0x3A, 0x0C, 0x06,  // 86:570 'V' width:6px
	0x02, 0x46, 0x10, 0x08,  // 87:582 'W' width:8px
	0x02, 0x56, 0x0C, 0x06,  // 88:598 'X' width:6px
	0x02, 0x62, 0x0A, 0x05,  // 89:610 'Y' width:5px
	0x02, 0x6C, 0x0C, 0x06,  // 90:620 'Z' width:6px
	0x02, 0x78, 0x08, 0x04,  // 91:632 '[' width:4px
	0x02, 0x80, 0x0A, 0x05,  // 92:640 'backslash' width:5px
	0x02, 0x8A, 0x08, 0x04,  // 93:650 ']' width:4px
	0x02, 0x92, 0x0A, 0x05,  // 94:658 '^' width:5px
	0x02, 0x9C, 0x0A, 0x05,  // 95:668 '_' width:5px
	0x02, 0xA6, 0x04, 0x02,  // 96:678 '`' width:2px
	0x02, 0xAA, 0x06, 0x03,  // 123:682 '{' width:3px
	0x02, 0xB0, 0x02, 0x01,  // 124:688 '|' width:1px
	0x02, 0xB2, 0x06, 0x03,  // 125:690 '}' width:3px
	0x02, 0xB8, 0x08, 0x04,  // 126:696 '~' width:4px

	// Font Data:
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x03,
	0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x48, 0x00,
	0xFE, 0x01, 0x48, 0x00, 0x48, 0x00, 0xFE, 0x01, 0x48, 0x00,
	0x3E, 0x01, 0x22, 0x01, 0xFF, 0x03, 0x22, 0x01, 0xE2, 0x01,
	0x07, 0x03, 0x85, 0x00, 0x47, 0x00, 0x20, 0x00, 0x10, 0x00,
	0x88, 0x03, 0x84, 0x02, 0x83, 0x03, 0xEE, 0x01, 0x11, 0x02,
	0x11, 0x02, 0xEE, 0x03, 0x00, 0x05, 0x07, 0x00, 0x30, 0x00,
	0xCC, 0x00, 0x02, 0x01, 0x01, 0x02, 0x01, 0x02, 0x86, 0x01,
	0x48, 0x00, 0x30, 0x00, 0xA8, 0x00, 0x70, 0x00, 0xFC, 0x01,
	0x70, 0x00, 0xA8, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00,
	0xFC, 0x01, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0x04,
	0x00, 0x02, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00,
	0x20, 0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x02, 0xC0, 0x01,
	0x38, 0x00, 0x06, 0x00, 0x01, 0x00, 0xFF, 0x03, 0x01, 0x02,
	0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0xFF, 0x03, 0x04, 0x00,
	0x02, 0x02, 0xFF, 0x03, 0x00, 0x02, 0xF1, 0x03, 0x11, 0x02,
	0x11, 0x02, 0x11, 0x02, 0x11, 0x02, 0x1F, 0x02, 0x01, 0x02,
	0x11, 0x02, 0x11, 0x02, 0x11, 0x02, 0x11, 0x02, 0xFF, 0x03,
	0x3F, 0x00, 0x20, 0x00, 0x20, 0x00, 0x20, 0x00, 0xFC, 0x01,
	0x20, 0x00, 0x1F, 0x02, 0x11, 0x02, 0x11, 0x02, 0x11, 0x02,
	0x11, 0x02, 0xF1, 0x03, 0xFF, 0x03, 0x11, 0x02, 0x11, 0x02,
	0x11, 0x02, 0x11, 0x02, 0xF1, 0x03, 0x03, 0x00, 0x01, 0x03,
	0xC1, 0x00, 0x31, 0x00, 0x0D, 0x00, 0x03, 0x00, 0xFF, 0x03,
	0x11, 0x02, 0x11, 0x02, 0x11, 0x02, 0x11, 0x02, 0xFF, 0x03,
	0x1F, 0x02, 0x11, 0x02, 0x11, 0x02, 0x11, 0x02, 0x11, 0x02,
	0xFF, 0x03, 0x98, 0x01, 0x98, 0x01, 0x00, 0x06, 0x18, 0x03,
	0x18, 0x01, 0x30, 0x00, 0x48, 0x00, 0x84, 0x00, 0x02, 0x01,
	0x01, 0x02, 0x88, 0x00, 0x88, 0x00, 0x88, 0x00, 0x88, 0x00,
	0x88, 0x00, 0x01, 0x02, 0x02, 0x01, 0x84, 0x00, 0x48, 0x00,
	0x30, 0x00, 0x02, 0x00, 0x01, 0x00, 0xF1, 0x02, 0x11, 0x00,
	0x11, 0x00, 0x0E, 0x00, 0xFE, 0x03, 0x41, 0x02, 0x99, 0x02,
	0x99, 0x02, 0x81, 0x02, 0x7E, 0x02, 0xFC, 0x03, 0x42, 0x00,
	0x41, 0x00, 0x41, 0x00, 0x42, 0x00, 0xFC, 0x03, 0xFF, 0x03,
	0x11, 0x02, 0x11, 0x02, 0x11, 0x02, 0x1E, 0x02, 0xE0, 0x01,
	0xFF, 0x03, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02,
	0x01, 0x02, 0xFF, 0x03, 0x01, 0x02, 0x01, 0x02, 0x02, 0x01,
	0xCC, 0x00, 0x30, 0x00, 0xFF, 0x03, 0x11, 0x02, 0x11, 0x02,
	0x11, 0x02, 0x11, 0x02, 0x11, 0x02, 0xFF, 0x03, 0x11, 0x00,
	0x11, 0x00, 0x11, 0x00, 0x01, 0x00, 0x01, 0x00, 0xFE, 0x01,
	0x01, 0x02, 0x01, 0x02, 0x11, 0x02, 0x11, 0x02, 0xF1, 0x01,
	0xFF, 0x03, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00, 0x10, 0x00,
	0xFF, 0x03, 0x01, 0x02, 0xFF, 0x03, 0x01, 0x02, 0x80, 0x03,
	0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x01, 0x02, 0xFF, 0x03,
	0xFF, 0x03, 0x10, 0x00, 0x28, 0x00, 0xC4, 0x00, 0x02, 0x00,
	0x01, 0x03, 0xFF, 0x03, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02,
	0x00, 0x02, 0x00, 0x02, 0xFF, 0x03, 0x02, 0x00, 0x0C, 0x00,
	0x30, 0x00, 0x40, 0x00, 0x30, 0x00, 0x0C, 0x00, 0x02, 0x00,
	0xFF, 0x03, 0xFF, 0x03, 0x02, 0x00, 0x1C, 0x00, 0xE0, 0x00,
	0x00, 0x01, 0xFF, 0x03, 0xFE, 0x01, 0x01, 0x02, 0x01, 0x02,
	0x01, 0x02, 0x01, 0x02, 0xFE, 0x01, 0xFF, 0x03, 0x21, 0x00,
	0x21, 0x00, 0x21, 0x00, 0x31, 0x00, 0x0E, 0x00, 0xFE, 0x01,
	0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01, 0x03, 0x01, 0x02,
	0xFE, 0x05, 0xFF, 0x03, 0x11, 0x00, 0x31, 0x00, 0x51, 0x00,
	0x91, 0x00, 0x11, 0x01, 0x0E, 0x02, 0x0E, 0x02, 0x11, 0x02,
	0x11, 0x02, 0x11, 0x02, 0x11, 0x02, 0xE1, 0x01, 0x01, 0x00,
	0x01, 0x00, 0xFF, 0x03, 0x01, 0x00, 0x01, 0x00, 0xFF, 0x01,
	0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0xFF, 0x01,
	0x0F, 0x00, 0xF0, 0x00, 0x00, 0x03, 0x00, 0x03, 0xF0, 0x00,
	0x0F, 0x00, 0xFF, 0x03, 0x00, 0x02, 0x80, 0x01, 0x40, 0x00,
	0x40, 0x00, 0x80, 0x01, 0x00, 0x02, 0xFF, 0x03, 0x03, 0x03,
	0xCC, 0x00, 0x30, 0x00, 0x30, 0x00, 0xCC, 0x00, 0x03, 0x03,
	0x03, 0x00, 0x0C, 0x00, 0xF0, 0x03, 0x0C, 0x00, 0x03, 0x00,
	0x01, 0x03, 0x81, 0x02, 0x61, 0x02, 0x19, 0x02, 0x05, 0x02,
	0x03, 0x02, 0xFF, 0x03, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02,
	0x03, 0x00, 0x0C, 0x00, 0x30, 0x00, 0xC0, 0x00, 0x00, 0x03,
	0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0xFF, 0x03, 0x04, 0x00,
	0x02, 0x00, 0x01, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x02,
	0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x01, 0x00,
	0x02, 0x00, 0x30, 0x00, 0x4A, 0x01, 0x85, 0x02, 0xEF, 0x03,
	0x85, 0x02, 0x4A, 0x01, 0x30, 0x00, 0x02, 0x00, 0x01, 0x00,
	0x02, 0x00, 0x01, 0x00
};

#endif // OLED_11_H
